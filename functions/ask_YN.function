#!/usr/bin/env bash
#
# This is a general-purpose function to ask Yes/No questions in Bash, either
# with or without a default answer. It keeps repeating the question until it
# gets a valid answer. User Must hit <cr> to register answer. Longer strings
# like "yes", "no" (and surprisingly "yellow") will work as only the first
# character is checked.

function ask_YN() {
    local OPTIND maxSwitch prompt clearScreenP silentSwitch yesno default reply

    help() {
        cat <<EOF
ask_YN -- ask Yes/No questions, wait for <cr> to proceed.

USAGE:
    ask_YN [OPTIONS...] [PROMPT_STRING]

OPTIONS:
    -h      Print this message.
    -m      Only read maxSwitch characters
    -c      Clear screen before returning.
    -s      silentSwitch - don't echo any keystrokes.
    -Y      Default to Y if a <cr> is the first character typed.
    -N      Default to N if a <cr> is the first character typed.

EOF
    }

    while getopts ":m:hcsYN" opt; do
        case $opt in
        h)
            help
            read -n 1 -s -p "Hit any key to continue, '^C' to quit. "
            return
            ;;
        m)
            maxSwitch="-n $OPTARG"
            ;;
        c)
            clearScreenP="yes"
            ;;
        s)
            silentSwitch="-s"
            ;;
        Y)
            yesno="[Y/n] "
            default="Y"
            ;;
        N)
            yesno="[y/N] "
            default="N"
            ;;
        \?)
            printf "==> Ignoring invalid option: -$OPTARG\n\n" >&2
            ;;
        :)
            printf "Option -$OPTARG requires an argument'.\n\n" >&2
            exit 1
            ;;
        esac
    done
    shift $((OPTIND - 1))

    prompt="$1"
    [ -z "$prompt" ] && prompt="Does that look correct?"
    [ -z "$yesno" ] && yesno="[y/n] "

    while true; do
        # Ask the question (not using "read -p" as it uses stderr not stdout)
        printf "$prompt $yesno"
        #
        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read $silentSwitch $maxSwitch reply </dev/tty
        replyLen=${#reply}
        #
        # Default?
        if [ -z "$reply" ]; then
            reply="$default"
        fi
        #
        case "$reply" in
        Y* | y*)
            [ -n "$clearScreenP" ] && clear
            return 0
            ;;
        N* | n*)
            [ -n "$clearScreenP" ] && clear
            return 1
            ;;
        *)
            [ -n "$silentSwitch" ] && printf "\n"
            # [ -n "$maxSwitch" ] && [ "$replyLen" -ge "$maxSwitch" ] && printf "\nreplyLen = $replyLen\n"
            # if (($replyLen >= $maxSwitch)); then
            #    printf "\nreply length = ${#reply}\n"
            # fi
            ;;
        esac
    done
}
